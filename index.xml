<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>発火後忘失</title>
    <link>https://yukihane.github.io/</link>
    <description>Recent content on 発火後忘失</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja-jp</language>
    <lastBuildDate>Thu, 30 Jan 2020 02:17:02 +0000</lastBuildDate>
    
	<atom:link href="https://yukihane.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>`fluent-plugin-bigquery` のパラメータ `request_timeout_sec` 、未設定の場合はどうなるの？</title>
      <link>https://yukihane.github.io/posts/202001/30/fluentd-request_timeout_sec-default/</link>
      <pubDate>Thu, 30 Jan 2020 02:17:02 +0000</pubDate>
      
      <guid>https://yukihane.github.io/posts/202001/30/fluentd-request_timeout_sec-default/</guid>
      <description>要旨 fluent-plugin-bigquery の README を読んでいると、 request_timeout_sec のデフォルト値が nil になっている(その下の request_open_timeout_sec には 60 が設定されているのに)のが気になりました。 結論としては、 request_timeout_sec は最終</description>
    </item>
    
    <item>
      <title>`logback-spring.xml` の中では `:-` でなく `:` を使用しましょう。</title>
      <link>https://yukihane.github.io/posts/202001/28/logback-spring-placeholder/</link>
      <pubDate>Tue, 28 Jan 2020 07:28:12 +0000</pubDate>
      
      <guid>https://yukihane.github.io/posts/202001/28/logback-spring-placeholder/</guid>
      <description>要旨 logback-spring.xml の中では :- でなく : を使用しましょう。 解説 Spring Bootのリファレンスに次のような記述があります: If you want to use a placeholder in a logging property, you should use Spring Boot’s</description>
    </item>
    
    <item>
      <title>Spring BootのRestTemplateで text/plain;Windows-31J なRESTレスポンスを処理する</title>
      <link>https://yukihane.github.io/posts/202001/26/resttemplate-with-illformed-json/</link>
      <pubDate>Sun, 26 Jan 2020 14:48:47 +0000</pubDate>
      
      <guid>https://yukihane.github.io/posts/202001/26/resttemplate-with-illformed-json/</guid>
      <description>要旨 JSONを返してくるのだけれどMIME typeが text/plain;charset=Windows-31J なレスポンスを、RestTemplateで扱いたい。 @GetMapping(produces = &#34;text/plain;charset=Windows-31J&#34;) public String response() { return &#34;{\&#34;text\&#34;: \&#34;こんにちは世</description>
    </item>
    
  </channel>
</rss>