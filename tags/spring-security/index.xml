<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>spring-security on 発火後忘失</title>
    <link>https://yukihane.github.io/tags/spring-security/</link>
    <description>Recent content in spring-security on 発火後忘失</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja-jp</language>
    <lastBuildDate>Sun, 19 Jul 2020 06:10:14 +0000</lastBuildDate>
    
	<atom:link href="https://yukihane.github.io/tags/spring-security/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Spring Security から認可サーバサポートが無くなる、というのは取り敢えず見直されています</title>
      <link>https://yukihane.github.io/posts/202007/19/spring-security-authentication-server/</link>
      <pubDate>Sun, 19 Jul 2020 06:10:14 +0000</pubDate>
      
      <guid>https://yukihane.github.io/posts/202007/19/spring-security-authentication-server/</guid>
      <description>世の中に認可サーバー製品がたくさんあるので、Spring Securityではサポートしないことを決定しました &amp;#8212; Spring Security OAuth2はあと数年でサ</description>
    </item>
    
    <item>
      <title>Spring SecurityのOAuth2.0関連の歴史を調査し実装してみた</title>
      <link>https://yukihane.github.io/posts/202007/15/history-of-spring-oauth2-libraries/</link>
      <pubDate>Tue, 14 Jul 2020 23:47:11 +0000</pubDate>
      
      <guid>https://yukihane.github.io/posts/202007/15/history-of-spring-oauth2-libraries/</guid>
      <description>Qiita に昔(2019年中頃)書いていた資料を転記し忘れていたので構成を見直してアップロードし直します。 2020年現在の状況はまた更新されています</description>
    </item>
    
    <item>
      <title>Spring Security OAuth 2.0 Client(OAuth 2.0 Login)でトークンの管理をしているのはOAuth2AuthorizedClientService</title>
      <link>https://yukihane.github.io/posts/202006/17/oauth2authorizedclientservice/</link>
      <pubDate>Wed, 17 Jun 2020 09:24:57 +0000</pubDate>
      
      <guid>https://yukihane.github.io/posts/202006/17/oauth2authorizedclientservice/</guid>
      <description>私も今回の質問(本文末参照)を見たとき少しの間勘違いしてしまったのですが、OAuth2.0のクライアントがどこで各リソースオーナーのトークン</description>
    </item>
    
    <item>
      <title>So many UserDetailsService samples considered harmful for beginners</title>
      <link>https://yukihane.github.io/posts/202006/13/userdetailsservice-samples-considered-harmful-for-biginners/</link>
      <pubDate>Sat, 13 Jun 2020 21:07:40 +0000</pubDate>
      
      <guid>https://yukihane.github.io/posts/202006/13/userdetailsservice-samples-considered-harmful-for-biginners/</guid>
      <description>やっぱり一発目の Spring Security やってみたで UserDetailsService 使うのは止めようず。So many UserDetailsService samples considered harmful for beginners. はじめに ちょっと待って！その UserDetails、本当に必要ですか</description>
    </item>
    
    <item>
      <title>UserDetailsServiceは誤解されている</title>
      <link>https://yukihane.github.io/posts/202006/12/userdetailsservice-conidered-harmful/</link>
      <pubDate>Fri, 12 Jun 2020 09:37:26 +0000</pubDate>
      
      <guid>https://yukihane.github.io/posts/202006/12/userdetailsservice-conidered-harmful/</guid>
      <description>サンプルコード等だけを見ていると UserDetailsService を利用することがSpring Securityの唯一の認証処理実現方法だと誤解しがちですが、 UserDetailsService はむしろユーテ</description>
    </item>
    
    <item>
      <title>spring-boot-starter-security を入れたら認証画面が！</title>
      <link>https://yukihane.github.io/posts/201907/04/spring-boot-and-spring-security/</link>
      <pubDate>Thu, 04 Jul 2019 20:32:21 +0000</pubDate>
      
      <guid>https://yukihane.github.io/posts/201907/04/spring-boot-and-spring-security/</guid>
      <description>WebSecurityConfigurerAdapter#configure(HttpSecurity) で form 認証を有効化しているのでこれをディスる。 WebSecurityConfigurerAdapterを継承した Spring コンポーネントをスキャン対</description>
    </item>
    
  </channel>
</rss>